require "json"

# :nodoc:
module PlaywrightGen
  private class Types
    module CustomMapping
      def define_types_in(scope : TypeDefinition)
      end
    end

    private class Mapping
      getter from : String
      getter to : String
      getter custom_mapping : CustomMapping?

      def initialize(@from, @to, @custom_mapping = nil)
      end
    end

    getter json_path_to_mapping : Hash(String, Mapping)

    def initialize
      @json_path_to_mapping = Hash(String, Mapping).new
      add_types
    end

    def find_for_path(path)
      @json_path_to_mapping[path]?
    end

    private def add(path, from, to, factory = nil)
      raise "Duplicate entry: #{path}" if @json_path_to_mapping.has_key?(path)
      @json_path_to_mapping[path] = Mapping.new(from, to, factory)
    end

    private def add_types
      # State enums
      add("Page.waitForLoadState.state", "\"domcontentloaded\"|\"load\"|\"networkidle\"", "LoadState")
      add("Frame.waitForLoadState.state", "\"domcontentloaded\"|\"load\"|\"networkidle\"", "LoadState")
      add("ElementHandle.waitForElementState.state", "\"disabled\"|\"enabled\"|\"hidden\"|\"stable\"|\"visible\"", "ElementState")
      add("Logger.isEnabled.severity", "\"error\"|\"info\"|\"verbose\"|\"warning\"", "Severity")
      add("Logger.log.severity", "\"error\"|\"info\"|\"verbose\"|\"warning\"", "Severity")
      # Option enums
      add("Browser.newContext.options.colorScheme", "\"dark\"|\"light\"|\"no-preference\"", "ColorScheme", Empty.new)
      add("Browser.newPage.options.colorScheme", "\"dark\"|\"light\"|\"no-preference\"", "ColorScheme", Empty.new)
      add("Page.click.options.button", "\"left\"|\"middle\"|\"right\"", "Mouse::Button", Empty.new)
      add("Page.click.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("Page.dblclick.options.button", "\"left\"|\"middle\"|\"right\"", "Mouse::Button", Empty.new)
      add("Page.dblclick.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("Page.tap.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("Page.emulateMedia.params.media", "null|\"print\"|\"screen\"", "Media")
      add("Page.emulateMedia.params.colorScheme", "null|\"dark\"|\"light\"|\"no-preference\"", "ColorScheme", Empty.new)
      add("Page.goBack.options.waitUntil", "\"domcontentloaded\"|\"load\"|\"networkidle\"", "Frame::LoadState", Empty.new)
      add("Page.goForward.options.waitUntil", "\"domcontentloaded\"|\"load\"|\"networkidle\"", "Frame::LoadState", Empty.new)
      add("Page.goto.options.waitUntil", "\"domcontentloaded\"|\"load\"|\"networkidle\"", "Frame::LoadState", Empty.new)
      add("Page.hover.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("Page.reload.options.waitUntil", "\"domcontentloaded\"|\"load\"|\"networkidle\"", "Frame::LoadState", Empty.new)
      add("Page.screenshot.options.type", "\"jpeg\"|\"png\"", "Type")
      add("Page.setContent.options.waitUntil", "\"domcontentloaded\"|\"load\"|\"networkidle\"", "Frame::LoadState", Empty.new)
      add("Page.waitForFunction.options.polling", "number|\"raf\"", "Int32", PollingOption.new)
      add("Page.waitForNavigation.options.waitUntil", "\"domcontentloaded\"|\"load\"|\"networkidle\"", "Frame::LoadState", Empty.new)
      add("Page.waitForSelector.options.state", "\"attached\"|\"detached\"|\"hidden\"|\"visible\"", "State")
      add("Frame.click.options.button", "\"left\"|\"middle\"|\"right\"", "Mouse::Button", Empty.new)
      add("Frame.click.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("Frame.dblclick.options.button", "\"left\"|\"middle\"|\"right\"", "Mouse::Button", Empty.new)
      add("Frame.dblclick.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("Frame.tap.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("Frame.goto.options.waitUntil", "\"domcontentloaded\"|\"load\"|\"networkidle\"", "LoadState", Empty.new)
      add("Frame.hover.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("Frame.setContent.options.waitUntil", "\"domcontentloaded\"|\"load\"|\"networkidle\"", "LoadState", Empty.new)
      add("Frame.waitForFunction.options.polling", "number|\"raf\"", "Int32", PollingOption.new)
      add("Frame.waitForNavigation.options.waitUntil", "\"domcontentloaded\"|\"load\"|\"networkidle\"", "LoadState", Empty.new)
      add("Frame.waitForSelector.options.state", "\"attached\"|\"detached\"|\"hidden\"|\"visible\"", "State")
      add("ElementHandle.click.options.button", "\"left\"|\"middle\"|\"right\"", "Mouse::Button", Empty.new)
      add("ElementHandle.click.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("ElementHandle.dblclick.options.button", "\"left\"|\"middle\"|\"right\"", "Mouse::Button", Empty.new)
      add("ElementHandle.dblclick.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("ElementHandle.tap.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("ElementHandle.hover.options.modifiers", "Array<\"Alt\"|\"Control\"|\"Meta\"|\"Shift\">", "Set(Keyboard::Modifier)", Empty.new)
      add("ElementHandle.screenshot.options.type", "\"jpeg\"|\"png\"", "Type")
      add("ElementHandle.waitForSelector.options.state", "\"attached\"|\"detached\"|\"hidden\"|\"visible\"", "State")
      add("Mouse.click.options.button", "\"left\"|\"middle\"|\"right\"", "Button", Empty.new)
      add("Mouse.dblclick.options.button", "\"left\"|\"middle\"|\"right\"", "Button", Empty.new)
      add("Mouse.down.options.button", "\"left\"|\"middle\"|\"right\"", "Button", Empty.new)
      add("Mouse.up.options.button", "\"left\"|\"middle\"|\"right\"", "Button", Empty.new)
      add("BrowserType.launchPersistentContext.options.colorScheme", "\"dark\"|\"light\"|\"no-preference\"", "ColorScheme", Empty.new)
      # File
      add("Page.addScriptTag.script.path", "string", "Path")
      add("Page.addStyleTag.style.path", "string", "Path")
      add("Page.pdf.options.path", "string", "Path")
      add("Page.screenshot.options.path", "string", "Path")
      add("Frame.addScriptTag.script.path", "string", "Path")
      add("Frame.addStyleTag.style.path", "string", "Path")
      add("ElementHandle.screenshot.options.path", "string", "Path")
      add("Route.fulfill.response.path", "string", "Path")
      add("Route.fulfill.response.status", "number", "Int32")
      add("Browser.newContext.options.recordHar.path", "string", "Path")
      add("Browser.newContext.options.recordVideo.dir", "string", "Path")
      add("Browser.newPage.options.recordHar.path", "string", "Path")
      add("Browser.newPage.options.recordVideo.dir", "string", "Path")
      add("BrowserType.launchPersistentContext.options.recordHar.path", "string", "Path")
      add("BrowserType.launchPersistentContext.options.recordVideo.dir", "string", "Path")
      add("BrowserType.launchPersistentContext.userDataDir", "string", "Path")
      add("BrowserType.launchPersistentContext.options.executablePath", "string", "Path")
      add("BrowserType.launchServer.options.executablePath", "string", "Path")
      add("BrowserType.launchPersistentContext.options.downloadsPath", "string", "Path")
      add("BrowserType.launch.options.executablePath", "string", "Path")
      add("BrowserType.launch.options.downloadsPath", "string", "Path")
      add("BrowserContext.storageState.options.path", "string", "Path")
      add("ChromiumBrowser.startTracing.options.path", "string", "Path")
      # Route
      add("BrowserContext.route.handler", "function(Route, Request)", "Consumer(Route)")
      add("BrowserContext.unroute.handler", "function(Route, Request)", "Consumer(Route)")
      add("Page.route.handler", "function(Route, Request)", "Consumer(Route)")
      add("Page.unroute.handler", "function(Route, Request)", "Consumer(Route)")

      # Viewport size.
      add("Browser.newContext.options.viewport", "null|Object", "Page::ViewPort?", Empty.new)
      add("Browser.newPage.options.viewport", "null|Object", "Page::ViewPort?", Empty.new)
      add("Page.setViewportSize.viewportSize", "Object", "ViewPort", Empty.new)
      add("Page.viewportSize", "null|Object", "ViewPort?", Empty.new)
      add("BrowserType.launchPersistentContext.options.viewport", "null|Object", "Page::ViewPort?", Empty.new)
      # RecordVideo size.
      add("Browser.newContext.options.recordVideo.size", "Object", "VideoSize", Empty.new)
      add("Browser.newPage.options.recordVideo.size", "Object", "VideoSize", Empty.new)
      add("BrowserType.launchPersistentContext.recordVideo.size", "Object", "Browser::VideoSize", Empty.new)
      # HTTP credentials.
      add("Browser.newContext.options.httpCredentials", "Object", "BrowserContext::HTTPCredentials", Empty.new)
      add("Browser.newPage.options.httpCredentials", "Object", "BrowserContext::HTTPCredentials", Empty.new)
      add("BrowserType.launchPersistentContext.options.httpCredentials", "Object", "BrowserContext::HTTPCredentials", Empty.new)
      add("BrowserContext.setHTTPCredentials.httpCredentials", "null|Object", "do nothing", Empty.new)
      # EvaluationArgument
      add("Page.$eval.arg", "EvaluationArgument", "Array(Any)")
      add("Page.$$eval.arg", "EvaluationArgument", "Array(Any)")
      add("Page.dispatchEvent.eventInit", "EvaluationArgument", "Array(Any)")
      add("Page.evaluate.arg", "EvaluationArgument", "Array(Any)")
      add("Page.evaluateHandle.arg", "EvaluationArgument", "Array(Any)")
      add("Page.waitForFunction.arg", "EvaluationArgument", "Array(Any)")
      add("Frame.$eval.arg", "EvaluationArgument", "Array(Any)")
      add("Frame.$$eval.arg", "EvaluationArgument", "Array(Any)")
      add("Frame.dispatchEvent.eventInit", "EvaluationArgument", "Array(Any)")
      add("Frame.evaluate.arg", "EvaluationArgument", "Array(Any)")
      add("Frame.evaluateHandle.arg", "EvaluationArgument", "Array(Any)")
      add("Frame.waitForFunction.arg", "EvaluationArgument", "Array(Any)")
      add("ElementHandle.$eval.arg", "EvaluationArgument", "Array(Any)")
      add("ElementHandle.$$eval.arg", "EvaluationArgument", "Array(Any)")
      add("ElementHandle.dispatchEvent.eventInit", "EvaluationArgument", "Array(Any)")
      add("ElementHandle.evaluate.arg", "EvaluationArgument", "Array(Any)")
      add("ElementHandle.evaluateHandle.arg", "EvaluationArgument", "Array(Any)")
      add("JSHandle.evaluate.arg", "EvaluationArgument", "Array(Any)")
      add("JSHandle.evaluateHandle.arg", "EvaluationArgument", "Array(Any)")
      add("Worker.evaluate.arg", "EvaluationArgument", "Array(Any)")
      add("Worker.evaluateHandle.arg", "EvaluationArgument", "Array(Any)")

      # js functions are always passed as text.
      add("Page.$eval.pageFunction", "function(Element)", "String")
      add("Page.$$eval.pageFunction", "function(Array<Element>)", "String")
      add("Frame.$eval.pageFunction", "function(Element)", "String")
      add("Frame.$$eval.pageFunction", "function(Array<Element>)", "String")
      add("ElementHandle.$eval.pageFunction", "function(Element)", "String")
      add("ElementHandle.$$eval.pageFunction", "function(Array<Element>)", "String")
      add("ElementHandle.evaluate.pageFunction", "function", "String")
      add("JSHandle.evaluate.pageFunction", "function", "String")
      add("BrowserContext.exposeBinding.playwrightBinding", "function", "Page::Binding")
      add("BrowserContext.exposeFunction.playwrightFunction", "function", "Page::Function")
      add("Page.exposeBinding.playwrightBinding", "function", "Binding")
      add("Page.exposeFunction.playwrightFunction", "function", "Function")
      add("BrowserContext.addInitScript.script", "function|string|Object", "String")
      add("Page.addInitScript.script", "function|string|Object", "String")
      add("Page.evaluate.pageFunction", "function|string", "String")
      add("Page.evaluateHandle.pageFunction", "function|string", "String")
      add("Page.waitForFunction.pageFunction", "function|string", "String")
      add("Frame.evaluate.pageFunction", "function|string", "String")
      add("Frame.evaluateHandle.pageFunction", "function|string", "String")
      add("Frame.waitForFunction.pageFunction", "function|string", "String")
      add("ElementHandle.evaluateHandle.pageFunction", "function|string", "String")
      add("JSHandle.evaluateHandle.pageFunction", "function|string", "String")
      add("Selectors.register.script", "function|string|Object", "String")
      add("Worker.evaluate.pageFunction", "function|string", "String")
      add("Worker.evaluateHandle.pageFunction", "function|string", "String")
      add("WebSocket.waitForEvent.optionsOrPredicate", "Function|Object", "String")
      # Return structures
      add("Dialog.type", "string", "Type", Empty.new)
      add("ConsoleMessage.location", "Object", "Location")
      add("ElementHandle.boundingBox", "Promise<null|Object>", "BoundingBox?", Empty.new)
      add("Accessibility.snapshot", "Promise<null|Object>", "AccessibilityNode?", Empty.new)
      add("WebSocket.framereceived", "Object", "FrameData", Empty.new)
      add("WebSocket.framesent", "Object", "FrameData", Empty.new)
      add("Page.waitForRequest", "Promise<Request>", "Deferred(Request)")
      add("Page.waitForResponse", "Promise<Response>", "Deferred(Response?)")
      add("Page.waitForNavigation", "Promise<null|Response>", "Deferred(Response?)")
      add("Frame.waitForNavigation", "Promise<null|Response>", "Deferred(Response?)")
      add("Page.waitForSelector", "Promise<null|ElementHandle>", "Deferred(ElementHandle?)", Empty.new)
      add("Frame.waitForSelector", "Promise<null|ElementHandle>", "Deferred(ElementHandle?)", Empty.new)
      add("ElementHandle.waitForSelector", "Promise<null|ElementHandle>", "Deferred(ElementHandle?)", Empty.new)
      add("Frame.waitForLoadState", "Promise", "Deferred(Nil)", Empty.new)
      add("Page.waitForLoadState", "Promise", "Deferred(Nil)", Empty.new)
      add("Frame.waitForTimeout", "Promise", "Deferred(Nil)", Empty.new)
      add("Page.waitForTimeout", "Promise", "Deferred(Nil)", Empty.new)
      add("Frame.waitForFunction", "Promise<JSHandle>", "Deferred(JSHandle)", Empty.new)
      add("Page.waitForFunction", "Promise<JSHandle>", "Deferred(JSHandle)", Empty.new)
      add("ElementHandle.waitForElementState", "Promise", "Deferred(Nil)", Empty.new)
      # Custom options
      add("Page.pdf.options.margin.top", "string|number", "String")
      add("Page.pdf.options.margin.right", "string|number", "String")
      add("Page.pdf.options.margin.bottom", "string|number", "String")
      add("Page.pdf.options.margin.left", "string|number", "String")
      add("Page.pdf.options.width", "string|number", "String")
      add("Page.pdf.options.height", "string|number", "String")
      add("Page.goto.options", "Object", "NavigateOptions")
      add("Frame.goto.options", "Object", "NavigateOptions")
      add("Page.click.options.position", "Object", "Position", Empty.new)
      add("Page.dblclick.options.position", "Object", "Position", Empty.new)
      add("Page.hover.options.position", "Object", "Position", Empty.new)
      add("Frame.click.options.position", "Object", "Position", Empty.new)
      add("Frame.dblclick.options.position", "Object", "Position", Empty.new)
      add("Frame.hover.options.position", "Object", "Position", Empty.new)
      add("ElementHandle.click.options.position", "Object", "Position", Empty.new)
      add("ElementHandle.dblclick.options.position", "Object", "Position", Empty.new)
      add("ElementHandle.hover.options.position", "Object", "Position", Empty.new)
      add("Frame.page", "Page", "Page?")
      # The method has custom signatures
      add("BrowserContext.cookies", "Promise<Array<Object>>", "Cookie")
      add("BrowserContext.cookies.sameSite", "\"Lax\"|\"None\"|\"Strict\"", "SameSite", Empty.new)
      add("BrowserContext.cookies.expires", "number", "Int64")
      add("BrowserContext.addCookies.cookies", "Array<Object>", "AddCookie")
      add("BrowserContext.addCookies.cookies.sameSite", "\"Lax\"|\"None\"|\"Strict\"", "SameSite", Empty.new)
      add("BrowserContext.addCookies.cookies.expires", "number", "Int64", Empty.new)
      add("BrowserContext.route.url", "string|RegExp|function(URL):boolean", "String")
      add("BrowserContext.unroute.url", "string|RegExp|function(URL):boolean", "String")
      add("BrowserContext.storageState", "Promise<Object>", "StorageState", Empty.new)
      add("BrowserContext.waitForEvent.event", "string", "EventType", Empty.new)
      add("BrowserContext.waitForEvent.optionsOrPredicate", "Function|Object", "String")
      add("BrowserContext.waitForEvent", "Promise<Object>", "Deferred(Event(EventType))", Empty.new)
      add("Page.waitForNavigation.options.url", "string|RegExp|Function", "String|Regex|Proc(String,Bool)|Nil")
      add("Page.frame.options", "string|Object", "FrameOptions", Empty.new)
      add("Page.route.url", "string|RegExp|function(URL):boolean", "String")
      add("Page.selectOption.values", "null|string|ElementHandle|Array<string>|Object|Array<ElementHandle>|Array<Object>", "String")
      add("Page.setInputFiles.files", "string|Array<string>|Object|Array<Object>", "String")
      add("Page.unroute.url", "string|RegExp|function(URL):boolean", "String")
      add("Page.waitForEvent.event", "string", "EventType", Empty.new)
      add("Page.waitForEvent.optionsOrPredicate", "Function|Object", "WaitForEventOptions")
      add("Page.waitForEvent", "Promise<Object>", "Deferred(Event(EventType))", Empty.new)
      add("Page.waitForRequest.urlOrPredicate", "string|RegExp|Function", "String")
      add("Page.waitForResponse.urlOrPredicate", "string|RegExp|function(Response):boolean", "String")
      add("Frame.waitForNavigation.options.url", "string|RegExp|Function", "String|Regex|Proc(String,Bool)|Nil")
      add("Frame.selectOption.values", "null|string|ElementHandle|Array<string>|Object|Array<ElementHandle>|Array<Object>", "String")
      add("Frame.setInputFiles.files", "string|Array<string>|Object|Array<Object>", "String")
      add("ElementHandle.selectOption.values", "null|string|ElementHandle|Array<string>|Object|Array<ElementHandle>|Array<Object>", "String")
      add("ElementHandle.setInputFiles.files", "string|Array<string>|Object|Array<Object>", "String")
      add("FileChooser.setFiles.files", "string|Array<string>|Object|Array<Object>", "String")
      add("Route.continue.overrides.postData", "string|Buffer", "Bytes")
      add("Route.fulfill.response.body", "string|Buffer", "String")
      add("BrowserType.launch.options.ignoreDefaultArgs", "boolean|Array<string>", "Bool")
      add("BrowserType.launch.options.firefoxUserPrefs", "Object<string, string|number|boolean>", "String")
      add("BrowserType.launch.options.env", "Object<string, string|number|boolean>", "String")
      add("BrowserType.launchPersistentContext.options.ignoreDefaultArgs", "boolean|Array<string>", "String")
      add("BrowserType.launchPersistentContext.options.env", "Object<string, string|number|boolean>", "String")
      add("BrowserType.launchServer.options.ignoreDefaultArgs", "boolean|Array<string>", "String")
      add("BrowserType.launchServer.options.firefoxUserPrefs", "Object<string, string|number|boolean>", "String")
      add("BrowserType.launchServer.options.env", "Object<string, string|number|boolean>", "String")
      add("Logger.log.message", "string|Error", "String")
      add("Logger.log.args", "Array<Object>", "Array(Any)")
      add("Browser.newContext.options.geolocation.latitude", "number", "Float64")
      add("Browser.newContext.options.geolocation.longitude", "number", "Float64")
      add("Browser.newContext.options.geolocation.accuracy", "number", "Float64")
      add("Browser.newPage.options.geolocation.latitude", "number", "Float64")
      add("Browser.newPage.options.geolocation.longitude", "number", "Float64")
      add("Browser.newPage.options.geolocation.accuracy", "number", "Float64")
      add("BrowserType.launchPersistentContext.options.geolocation.latitude", "number", "Float64")
      add("BrowserType.launchPersistentContext.options.geolocation.longitude", "number", "Float64")
      add("BrowserType.launchPersistentContext.options.geolocation.accuracy", "number", "Float64")
      add("BrowserContext.setGeolocation.geolocation", "null|Object", "Geolocation?", Empty.new)
      add("Browser.newContext.options.geolocation", "Object", "Geolocation", Empty.new)
      add("Browser.newContext.options.storageState", "string|Object", "BrowserContext::StorageState", Empty.new)
      add("Browser.newPage.options.storageState", "string|Object", "BrowserContext::StorageState", Empty.new)
      add("Browser.newPage.options.geolocation", "Object", "Geolocation", Empty.new)
      add("BrowserType.launchPersistentContext.options.geolocation", "Object", "Geolocation", Empty.new)
      add("Download.saveAs.path", "string", "Path", Empty.new)
      add("Download.path", "Promise<null|string>", "Path?", Empty.new)
      add("Download.createReadStream", "Promise<null|Readable>", "IO", Empty.new)
      # Single field options
      add("Keyboard.type.options", "Object", "Int32", Empty.new)
      add("Keyboard.press.options", "Object", "Int32", Empty.new)
      # node.js types
      add("BrowserServer.process", "ChildProcess", "Object")
      add("Page.pdf", "Promise<Buffer>", "Bytes")
      add("Page.screenshot", "Promise<Buffer>", "Bytes")
      add("ElementHandle.screenshot", "Promise<Buffer>", "Bytes")
      add("Request.postDataBuffer", "null|Buffer", "Bytes?")
      add("Response.body", "Promise<Buffer>", "Bytes")
      add("Response.finished", "Promise<null|Error>", "String?")
      add("ChromiumBrowser.stopTracing", "Promise<Buffer>", "Bytes")
      add("WebSocket.framereceived.payload", "string|Buffer", "Bytes")
      add("WebSocket.framesent.payload", "string|Buffer", "Bytes")

      # JSON type
      add("BrowserContext.addInitScript.arg", "Serializable", "Any")
      add("Page.$eval", "Promise<Serializable>", "Any")
      add("Page.$$eval", "Promise<Serializable>", "Any")
      add("Page.addInitScript.arg", "Serializable", "Any")
      add("Page.evaluate", "Promise<Serializable>", "Any")
      add("Frame.$eval", "Promise<Serializable>", "Any")
      add("Frame.$$eval", "Promise<Serializable>", "Any")
      add("Frame.evaluate", "Promise<Serializable>", "Any")
      add("ElementHandle.$eval", "Promise<Serializable>", "Any")
      add("ElementHandle.$$eval", "Promise<Serializable>", "Any")
      add("ElementHandle.evaluate", "Promise<Serializable>", "Any")
      add("ElementHandle.jsonValue", "Promise<Serializable>", "Any")
      add("JSHandle.evaluate", "Promise<Serializable>", "Any")
      add("JSHandle.jsonValue", "Promise<Serializable>", "Any")
      add("Response.json", "Promise<Serializable>", "Any")
      add("Worker.evaluate", "Promise<Serializable>", "Any")
      add("CDPSession.send.params", "Object", "Any", Empty.new)
    end

    private class PollingOption
      include CustomMapping
    end

    private class Empty
      include CustomMapping
    end
  end
end
